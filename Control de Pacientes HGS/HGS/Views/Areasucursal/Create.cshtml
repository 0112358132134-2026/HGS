<link rel="stylesheet" href="~/css/createView.css" asp-append-version="true" />
@model HGSModel.Areasucursal

@{
    ViewData["Title"] = "Añadir Ubicación";
}

<div class="title">AÑADIR UBICACIÓN</div>

<div class="row">
    <div class="col">
        <div class="formContainer">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="AreaId" class="control-label">ÁREA</label>
                    <select asp-for="AreaId" class="select" asp-items="@Model.Areas"></select>
                </div>
                <div class="form-group mt-3">
                    <label asp-for="BranchId" class="control-label">SUCURSAL</label>
                    <select asp-for="BranchId" class ="select" asp-items="@Model.Branches"></select>
                </div>
                <div class="form-group d-grid gap-2 mt-3">
                    <input type="submit" value="Añadir Ubicación" class="btn btn-light" />
                </div>
            </form>
        </div>        
    </div>
    <div class="col" style="flex-direction:column;padding: 30px;">
        <div class="information">
            Acá puede agregar una Ubicación. Una Ubicación asocia un Área a una Sucursal
            del Hospital HGS (Ej. Pediatría Petén - Significa que en la Sucursal de Petén
            existe un Área de Pediatría).
        </div>
        <div>
            <a asp-action="List">
                <input type="submit" value="↻ Regresar" class="btn btn-dark" style="width:200px;" />
            </a>
        </div>
    </div>
</div>

@if (@ViewData["Response"] != null)
{
    @if (@ViewData["Response"].ToString().Equals("Success"))
    {
        <script>
            function Error() {
                Swal.fire('OK', '¡Área Sucursal ingresada existosamente!', 'success');
            }
        </script>
    }
    else if (@ViewData["Response"].ToString().Equals("Unsuccessfully"))
    {
        <script>
            function Error() {
                Swal.fire('Advertencia', '¡Esta Área Sucursal ya ha sido ingresada!', 'info');
            }
        </script>
    }
    else if (@ViewData["Response"].ToString().Equals("Error"))
    {
        <script>
            function Error() {
                Swal.fire('Error', 'Ha ocurrido un error inesperado', 'error');
            }
        </script>
    }
    else if (@ViewData["Response"].ToString().Equals("NoAreas"))
    {
        <script>
            function Error() {
                Swal.fire('Advertencia', 'Aún no se han ingresado áreas al sistema', 'info');
            }
        </script>
    }
    else if (@ViewData["Response"].ToString().Equals("NoBranches"))
    {
        <script>
            function Error() {
                Swal.fire('Advertencia', 'Aún no se han ingresado municipios al sistema', 'info');
            }
        </script>
    }
    else if (@ViewData["Response"].ToString().Equals("NoData"))
    {
        <script>
            function Error() {
                Swal.fire('Advertencia', 'Aún no se ha ingresado ningún área ni ningún municipio al sistema', 'info');
            }
        </script>
    }
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}